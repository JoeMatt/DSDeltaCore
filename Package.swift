// swift-tools-version:5.7
// The swift-tools-version declares the minimum version of Swift required to build this package.

import PackageDescription
import Foundation

let package = Package(
    name: "DSDeltaCore",
    defaultLocalization: "en",
    platforms: [
        .iOS(.v12),
        .macOS(.v11),
        .tvOS(.v12)
    ],
    products: [
        .library(
            name: "DSDeltaCore",
            targets: ["DSDeltaCore"]),
        .library(
            name: "DSDeltaCoreStatic",
            type: .static,
            targets: ["DSDeltaCore"]),
        .library(
            name: "DSDeltaCoreDynamic",
            type: .dynamic,
            targets: ["DSDeltaCore"])
    ],
    dependencies: [
        //        .package(url: "https://github.com/rileytestut/DeltaCore.git", .branch("main"))
        .package(path: "../DeltaCore/")
    ],
    targets: [
        .target(
            name: "DSSwift",
            dependencies: ["DeltaCore"]
        ),
        .target(
            name: "DSBridge",
            dependencies: ["DeltaCore", "desmume", "DSSwift"],
            exclude: [
                //                "texcache.cpp"
            ],
            publicHeadersPath: "",
            cSettings: [
                .define("HOST_DARWIN"),
                .define("DESMUME_COCOA"),
                .define("HAVE_OPENGL"),
                .define("ANDROID"),
                .define("HAVE_LIBZ"),
                .define("COMPRESS_MT"),
                .define("IOS"),
                .define("OBJ_C"),
                .define("STATIC_LIBRARY", to: "1"),
                .unsafeFlags([
                    "-fmodules",
                    "-fcxx-modules",
                    "-ftree-vectorize",
                    "-fexceptions"
                ]),
                .headerSearchPath("../desmume/desmume/desmume/src"),
                .headerSearchPath("../desmume/desmume/desmume/src/metaspu"),
                .headerSearchPath("../desmume/desmume/desmume/src/libretro-common/include"),
            ],
            cxxSettings: [
                .define("HOST_DARWIN"),
                .define("DESMUME_COCOA"),
                .define("HAVE_OPENGL"),
                .define("ANDROID"),
                .define("HAVE_LIBZ"),
                .define("COMPRESS_MT"),
                .define("IOS"),
                .define("OBJ_C"),
                .define("STATIC_LIBRARY", to: "1"),
                .unsafeFlags([
                    "-fmodules",
                    "-fcxx-modules",
                    "-ftree-vectorize",
                    "-fexceptions"
                ]),
                .headerSearchPath("../desmume/desmume/desmume/src"),
                .headerSearchPath("../desmume/desmume/desmume/src/metaspu"),
                .headerSearchPath("../desmume/desmume/desmume/src/libretro-common/include"),
            ],
            swiftSettings: [
                .unsafeFlags([
                    "-enable-experimental-cxx-interop",
                    "-I", "../desmume/desmume/desmume/src",
                    "-I", "../desmume/desmume/desmume/src/libretro-common/include"
                ])
            ],
            linkerSettings: [
                .linkedFramework("UIKit", .when(platforms: [.iOS, .tvOS, .macCatalyst])),
                .linkedFramework("AVFoundation", .when(platforms: [.iOS, .tvOS, .macCatalyst])),
                .linkedFramework("GLKit", .when(platforms: [.iOS, .tvOS, .macCatalyst])),
            ]
        ),
        .target(
            name: "DSDeltaCore",
            dependencies: ["DeltaCore", "desmume", "DSSwift", "DSBridge"],
            exclude: [
                "Resources/Controller Skin/info.json",
                "Resources/Controller Skin/ipad_landscape.pdf",
                "Resources/Controller Skin/ipad_portrait_large.png",
                "Resources/Controller Skin/ipad_portrait_medium.png",
                "Resources/Controller Skin/ipad_portrait_small.png",
                "Resources/Controller Skin/ipad_splitview_landscape.pdf",
                "Resources/Controller Skin/iphone_edgetoedge_landscape.pdf",
                "Resources/Controller Skin/iphone_edgetoedge_portrait.pdf",
                "Resources/Controller Skin/iphone_landscape.pdf",
                "Resources/Controller Skin/iphone_portrait.pdf"
            ],
            resources: [
                .copy("Resources/Controller Skin/Standard.deltaskin"),
                .copy("Resources/Standard.deltamapping"),
            ],
            cSettings: [
                .define("HOST_DARWIN"),
                .define("DESMUME_COCOA"),
                .define("HAVE_OPENGL"),
                .define("ANDROID"),
                .define("HAVE_LIBZ"),
                .define("COMPRESS_MT"),
                .define("IOS"),
                .define("OBJ_C"),
                .define("STATIC_LIBRARY", to: "1"),
                .unsafeFlags([
                    "-fmodules",
                    "-fcxx-modules",
                    "-ftree-vectorize",
                    "-fexceptions"
                ]),
                .headerSearchPath("../desmume/desmume/desmume/src"),
                .headerSearchPath("../desmume/desmume/desmume/src/metaspu"),
                .headerSearchPath("../desmume/desmume/desmume/src/libretro-common/include"),
            ],
            cxxSettings: [
                .define("HOST_DARWIN"),
                .define("DESMUME_COCOA"),
                .define("HAVE_OPENGL"),
                .define("ANDROID"),
                .define("HAVE_LIBZ"),
                .define("COMPRESS_MT"),
                .define("IOS"),
                .define("OBJ_C"),
                .define("STATIC_LIBRARY", to: "1"),
                .unsafeFlags([
                    "-fmodules",
                    "-fcxx-modules",
                    "-ftree-vectorize",
                    "-fexceptions"
                ]),
                .headerSearchPath("../desmume/desmume/desmume/src"),
                .headerSearchPath("../desmume/desmume/desmume/src/metaspu"),
                .headerSearchPath("../desmume/desmume/desmume/src/libretro-common/include"),
            ],
            swiftSettings: [
                .unsafeFlags([
                    "-enable-experimental-cxx-interop",
                    "-I", "../desmume/desmume/desmume/src",
                    "-I", "../desmume/desmume/desmume/src/libretro-common/include"
                ])
            ],
            linkerSettings: [
                .linkedFramework("UIKit", .when(platforms: [.iOS, .tvOS, .macCatalyst])),
                .linkedFramework("AVFoundation", .when(platforms: [.iOS, .tvOS, .macCatalyst])),
                .linkedFramework("GLKit", .when(platforms: [.iOS, .tvOS, .macCatalyst])),
            ]
        ),
        .target(
            name: "desmume",
            exclude: [
                "desmume/tools",
                "desmume/license",
                "desmume/README.md",
                "desmume/desmume/AUTHORS",
                "desmume/desmume/ChangeLog",
                "desmume/desmume/COPYING",
                "desmume/desmume/README",
                "desmume/desmume/README.LIN",
                "desmume/desmume/README.MAC",
                "desmume/desmume/README.WIN",
                "desmume/desmume/doc/",
                //                "desmume/desmume/src/addons",
                //                "desmume/desmume/src/filter",
                //                "desmume/desmume/src/frontend/",
//                                "desmume/desmume/src/frontend/cocoa/",
                "desmume/desmume/src/frontend/cocoa/translations",
                "desmume/desmume/src/frontend/cocoa/openemu/",
                "desmume/desmume/src/frontend/cocoa/userinterface/",
                //                "desmume/desmume/src/frontend/modules/",
                //                "desmume/desmume/src/frontend/posix/",
                "desmume/desmume/src/frontend/windows/",
                "desmume/desmume/src/gdbstub/",
                //                "desmume/desmume/src/libretro-common",
                "desmume/desmume/src/metaspu/win32",
                //                "desmume/desmume/src/utils"
            ],
            sources: [
                "desmume/desmume/src/Database.cpp",
                "desmume/desmume/src/Disassembler.cpp",
                "desmume/desmume/src/FIFO.cpp",
                "desmume/desmume/src/GPU.cpp",
                "desmume/desmume/src/MMU.cpp",
                "desmume/desmume/src/NDSSystem.cpp",
                "desmume/desmume/src/ROMReader.cpp",
                "desmume/desmume/src/SPU.cpp",
                "desmume/desmume/src/arm_instructions.cpp",
                "desmume/desmume/src/arm_jit.cpp",
                "desmume/desmume/src/armcpu.cpp",
                "desmume/desmume/src/bios.cpp",
                "desmume/desmume/src/cheatSystem.cpp",
                "desmume/desmume/src/commandline.cpp",
                "desmume/desmume/src/common.cpp",
                "desmume/desmume/src/cp15.cpp",
                "desmume/desmume/src/debug.cpp",
                "desmume/desmume/src/desmume_config.cpp",
                "desmume/desmume/src/emufile.cpp",
                "desmume/desmume/src/encrypt.cpp",
                "desmume/desmume/src/firmware.cpp",
                "desmume/desmume/src/gfx3d.cpp",
                "desmume/desmume/src/matrix.cpp",
                "desmume/desmume/src/mc.cpp",
                "desmume/desmume/src/mic.cpp",
                "desmume/desmume/src/movie.cpp",
                "desmume/desmume/src/path.cpp",
//                "desmume/desmume/src/rasterize.cpp",
                "desmume/desmume/src/readwrite.cpp",
                "desmume/desmume/src/rtc.cpp",
                "desmume/desmume/src/saves.cpp",
                "desmume/desmume/src/slot1.cpp",
                "desmume/desmume/src/slot2.cpp",
                "desmume/desmume/src/thumb_instructions.cpp",
                "desmume/desmume/src/version.cpp",
                "desmume/desmume/src/wifi.cpp",
                "desmume/desmume/src/addons/slot1_none.cpp",
                "desmume/desmume/src/addons/slot1_r4.cpp",
                "desmume/desmume/src/addons/slot1_retail_auto.cpp",
                "desmume/desmume/src/addons/slot1_retail_mcrom.cpp",
                "desmume/desmume/src/addons/slot1_retail_mcrom_debug.cpp",
                "desmume/desmume/src/addons/slot1_retail_nand.cpp",
                "desmume/desmume/src/addons/slot1comp_mc.cpp",
                "desmume/desmume/src/addons/slot1comp_protocol.cpp",
                "desmume/desmume/src/addons/slot1comp_rom.cpp",
                "desmume/desmume/src/addons/slot2_auto.cpp",
                "desmume/desmume/src/addons/slot2_expMemory.cpp",
                "desmume/desmume/src/addons/slot2_gbagame.cpp",
                "desmume/desmume/src/addons/slot2_guitarGrip.cpp",
                "desmume/desmume/src/addons/slot2_mpcf.cpp",
                "desmume/desmume/src/addons/slot2_none.cpp",
                "desmume/desmume/src/addons/slot2_paddle.cpp",
                "desmume/desmume/src/addons/slot2_passme.cpp",
                "desmume/desmume/src/addons/slot2_piano.cpp",
                "desmume/desmume/src/addons/slot2_rumblepak.cpp",
                "desmume/desmume/src/filter/2xsai.cpp",
                "desmume/desmume/src/filter/bilinear.cpp",
                "desmume/desmume/src/filter/deposterize.cpp",
                "desmume/desmume/src/filter/epx.cpp",
                "desmume/desmume/src/filter/hq2x.cpp",
                "desmume/desmume/src/filter/hq3x.cpp",
                "desmume/desmume/src/filter/hq3x.dat",
                "desmume/desmume/src/filter/hq4x.cpp",
                "desmume/desmume/src/filter/hq4x.dat",
                "desmume/desmume/src/filter/lq2x.cpp",
                "desmume/desmume/src/filter/scanline.cpp",
                "desmume/desmume/src/filter/videofilter.cpp",
                "desmume/desmume/src/filter/xbrz.cpp",
                "desmume/desmume/src/libretro-common/compat/compat_getopt.c",
                "desmume/desmume/src/libretro-common/compat/compat_strl.c",
                "desmume/desmume/src/libretro-common/encodings/encoding_utf.c",
                "desmume/desmume/src/libretro-common/features/features_cpu.c",
                "desmume/desmume/src/libretro-common/file/file_path.c",
                "desmume/desmume/src/libretro-common/file/retro_dirent.c",
                "desmume/desmume/src/libretro-common/file/retro_stat.c",
                "desmume/desmume/src/libretro-common/rthreads/async_job.c",
                "desmume/desmume/src/libretro-common/rthreads/rsemaphore.c",
                "desmume/desmume/src/libretro-common/rthreads/rthreads.c",
                "desmume/desmume/src/metaspu/metaspu.cpp",
                "desmume/desmume/src/metaspu/SndOut.cpp",
                "desmume/desmume/src/metaspu/Timestretcher.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/AAFilter.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/cpu_detect_x86_gcc.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/FIFOSampleBuffer.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/FIRFilter.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/RateTransposer.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/SoundTouch.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/TDStretch.cpp",
                "desmume/desmume/src/metaspu/SoundTouch/WavFile.cpp",
                "desmume/desmume/src/utils/ConvertUTF.c",
                "desmume/desmume/src/utils/advanscene.cpp",
                "desmume/desmume/src/utils/colorspacehandler/colorspacehandler.cpp",
                "desmume/desmume/src/utils/datetime.cpp",
                "desmume/desmume/src/utils/decrypt/crc.cpp",
                "desmume/desmume/src/utils/decrypt/decrypt.cpp",
                "desmume/desmume/src/utils/decrypt/header.cpp",
                "desmume/desmume/src/utils/dlditool.cpp",
                "desmume/desmume/src/utils/emufat.cpp",
                "desmume/desmume/src/utils/fsnitro.cpp",
                "desmume/desmume/src/utils/guid.cpp",
//                "desmume/desmume/src/utils/arm_arm/arm_gen.cpp",
//                "desmume/desmume/src/utils/arm_arm/arm_jit.cpp",
                "desmume/desmume/src/utils/libfat/cache.cpp",
                "desmume/desmume/src/utils/libfat/directory.cpp",
                "desmume/desmume/src/utils/libfat/disc.cpp",
                "desmume/desmume/src/utils/libfat/fatdir.cpp",
                "desmume/desmume/src/utils/libfat/fatfile.cpp",
                "desmume/desmume/src/utils/libfat/file_allocation_table.cpp",
                "desmume/desmume/src/utils/libfat/filetime.cpp",
                "desmume/desmume/src/utils/libfat/libfat.cpp",
                "desmume/desmume/src/utils/libfat/libfat_public_api.cpp",
                "desmume/desmume/src/utils/libfat/lock.cpp",
                "desmume/desmume/src/utils/libfat/partition.cpp",
                "desmume/desmume/src/utils/md5.cpp",
                "desmume/desmume/src/utils/task.cpp",
                "desmume/desmume/src/utils/tinyxml/tinystr.cpp",
                "desmume/desmume/src/utils/tinyxml/tinyxml.cpp",
                "desmume/desmume/src/utils/tinyxml/tinyxmlerror.cpp",
                "desmume/desmume/src/utils/tinyxml/tinyxmlparser.cpp",
                "desmume/desmume/src/utils/vfat.cpp",
                "desmume/desmume/src/utils/xstring.cpp",
                //                "desmume/desmume/src/agg2d.inl",
                //                "desmume/desmume/src/Database.h",
                //                "desmume/desmume/src/Disassembler.h",
                //                "desmume/desmume/src/FIFO.h",
                //                "desmume/desmume/src/GPU.h",
                //                "desmume/desmume/src/GPU_osd.h",
                //                "desmume/desmume/src/MMU.h",
                //                "desmume/desmume/src/MMU_timing.h",
                //                "desmume/desmume/src/NDSSystem.h",
                //                "desmume/desmume/src/PACKED.h",
                //                "desmume/desmume/src/PACKED_END.h",
                //                "desmume/desmume/src/ROMReader.h",
                //                "desmume/desmume/src/SPU.h",
                //                "desmume/desmume/src/addons/slot1comp_mc.h",
                //                "desmume/desmume/src/addons/slot1comp_protocol.h",
                //                "desmume/desmume/src/addons/slot1comp_rom.h",
                //                "desmume/desmume/src/agg2d.h",
                //                "desmume/desmume/src/armcpu.h",
                //                "desmume/desmume/src/bios.h",
                //                "desmume/desmume/src/bits.h",
                //                "desmume/desmume/src/cheatSystem.h",
                //                "desmume/desmume/src/commandline.h",
                //                "desmume/desmume/src/common.h",
                //                "desmume/desmume/src/cp15.h",
                //                "desmume/desmume/src/debug.h",
                //                "desmume/desmume/src/desmume_config.h",
                //                "desmume/desmume/src/emufile.h",
                //                "desmume/desmume/src/encrypt.h",
                //                "desmume/desmume/src/filter/filter.h",
                //                "desmume/desmume/src/filter/hq2x.h",
                //                "desmume/desmume/src/filter/interp.h",
                //                "desmume/desmume/src/filter/lq2x.h",
                //                "desmume/desmume/src/filter/videofilter.h",
                //                "desmume/desmume/src/filter/xbrz.h",
                //                "desmume/desmume/src/firmware.h",
                //                "desmume/desmume/src/gfx3d.h",
                //                "desmume/desmume/src/instructions.h",
                //                "desmume/desmume/src/matrix.h",
                //                "desmume/desmume/src/mc.h",
                //                "desmume/desmume/src/mem.h",
                //                "desmume/desmume/src/metaspu/metaspu.h",
                //                "desmume/desmume/src/mic.h",
                //                "desmume/desmume/src/movie.h",
                //                "desmume/desmume/src/path.h",
                //                "desmume/desmume/src/rasterize.h",
                //                "desmume/desmume/src/readwrite.h",
                //                "desmume/desmume/src/registers.h",
                //                "desmume/desmume/src/render3D.cpp",
                //                "desmume/desmume/src/rtc.h",
                //                "desmume/desmume/src/saves.h",
                //                "desmume/desmume/src/slot1.h",
                //                "desmume/desmume/src/slot2.h",
                //                "desmume/desmume/src/texcache.cpp",
                //                "desmume/desmume/src/texcache.h",
                //                "desmume/desmume/src/types.h",
                //                "desmume/desmume/src/utils/ConvertUTF.h",
                //                "desmume/desmume/src/utils/advanscene.h",
                //                "desmume/desmume/src/utils/datetime.h",
                //                "desmume/desmume/src/utils/decrypt/crc.h",
                //                "desmume/desmume/src/utils/decrypt/decrypt.h",
                //                "desmume/desmume/src/utils/decrypt/header.h",
                //                "desmume/desmume/src/utils/emufat.h",
                //                "desmume/desmume/src/utils/emufat_types.h",
                //                "desmume/desmume/src/utils/fsnitro.h",
                //                "desmume/desmume/src/utils/glcorearb.h",
                //                "desmume/desmume/src/utils/guid.h",
                //                "desmume/desmume/src/utils/libfat/bit_ops.h",
                //                "desmume/desmume/src/utils/libfat/cache.h",
                //                "desmume/desmume/src/utils/libfat/common.h",
                //                "desmume/desmume/src/utils/libfat/directory.h",
                //                "desmume/desmume/src/utils/libfat/disc.h",
                //                "desmume/desmume/src/utils/libfat/disc_io.h",
                //                "desmume/desmume/src/utils/libfat/fat.h",
                //                "desmume/desmume/src/utils/libfat/fatdir.h",
                //                "desmume/desmume/src/utils/libfat/fatfile.h",
                //                "desmume/desmume/src/utils/libfat/file_allocation_table.h",
                //                "desmume/desmume/src/utils/libfat/filetime.h",
                //                "desmume/desmume/src/utils/libfat/libfat_pc.h",
                //                "desmume/desmume/src/utils/libfat/libfat_public_api.h",
                //                "desmume/desmume/src/utils/libfat/lock.h",
                //                "desmume/desmume/src/utils/libfat/mem_allocate.h",
                //                "desmume/desmume/src/utils/libfat/partition.h",
                //                "desmume/desmume/src/utils/md5.h",
                //                "desmume/desmume/src/utils/task.h",
                //                "desmume/desmume/src/utils/tinyxml/tinystr.h",
                //                "desmume/desmume/src/utils/tinyxml/tinyxml.h",
                //                "desmume/desmume/src/utils/valuearray.h",
                //                "desmume/desmume/src/utils/vfat.h",
                //                "desmume/desmume/src/utils/xstring.h",
                //                "desmume/desmume/src/version.h",
                //                "desmume/desmume/src/wifi.h",
                //                "desmume/desmume/src/OGLRender.h",
                //                "desmume/desmume/src/OGLRender_3_2.h",
                //                "desmume/desmume/src/render3D.h",
            ],
            publicHeadersPath: "include",
            cSettings: [
                .headerSearchPath("desmume/desmume/src"),
                .headerSearchPath("desmume/desmume/src/metaspu"),
                .headerSearchPath("desmume/desmume/src/libretro-common/include"),
                .define("HOST_DARWIN"),
                .define("DESMUME_COCOA"),
                //                .define("HAVE_OPENGL"),
                .define("ANDROID"),
                .define("HAVE_LIBZ"),
                .define("COMPRESS_MT"),
                .define("IOS"),
                .define("OBJ_C"),
                .define("STATIC_LIBRARY", to: "1"),
                .unsafeFlags([
                    //                    "-fmodules",
                    //                    "-fcxx-modules",
                    "-ftree-vectorize",
                    "-fexceptions"
                ]),
            ],
            cxxSettings: [
                .headerSearchPath("desmume/desmume/src"),
                .headerSearchPath("desmume/desmume/src/metaspu"),
                .headerSearchPath("desmume/desmume/src/libretro-common/include"),
                .define("HOST_DARWIN"),
                .define("DESMUME_COCOA"),
                //                .define("HAVE_OPENGL"),
                .define("ANDROID"),
                .define("HAVE_LIBZ"),
                .define("COMPRESS_MT"),
                .define("IOS"),
                .define("OBJ_C"),
                .define("STATIC_LIBRARY", to: "1"),
                .define("USE_POSIX_MEMALIGN"),
                .unsafeFlags([
                    //                    "-fmodules",
                    //                    "-fcxx-modules",
                    "-ftree-vectorize",
                    "-fexceptions"
                ]),
            ]
        ),
    ],
    swiftLanguageVersions: [.v5],
    cLanguageStandard: .c11,
    cxxLanguageStandard: .gnucxx03
)
